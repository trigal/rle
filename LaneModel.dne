// ~->[DNET-1]->~

// File created by an unlicensed user using Netica 5.04 on 11/29/17 at 13:45:27.

bnet LaneModel {
autoupdate = FALSE;

node sensorStateT1 {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Working, Not_Working);
	parents = ();
	probs = 
		// Working      Not Working  
		  (0.5,         0.5);
	};

node sensorStateT2 {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Working, Not_Working);
	parents = (sensorStateT1);
	probs = 
		// Working      Not Working   // sensorStateT1 
		  (0.8044062,   0.1955938,    // Working       
		   0.07851291,  0.9214871);   // Not Working   ;
	};

node laneT1 {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Lane1, Lane2, Lane3, Lane4);
	parents = ();
	probs = 
		// Lane1        Lane2        Lane3        Lane4        
		  (0.25,        0.25,        0.25,        0.25);
	};

node detector {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Lane1, Lane2, Lane3, Lane4);
	parents = (laneT1, sensorStateT1);
	probs = 
		// Lane1        Lane2        Lane3        Lane4         // laneT1 sensorStateT1 
		  (0.9975941,   0.002405937, 3.375015e-11,2.753771e-24, // Lane1  Working       
		   0.25,        0.25,        0.25,        0.25,         // Lane1  Not Working   
		   0.002400162, 0.9951996,   0.002400162, 3.366914e-11, // Lane2  Working       
		   0.25,        0.25,        0.25,        0.25,         // Lane2  Not Working   
		   3.366914e-11,0.002400162, 0.9951996,   0.002400162,  // Lane3  Working       
		   0.25,        0.25,        0.25,        0.25,         // Lane3  Not Working   
		   2.753771e-24,3.375015e-11,0.002405937, 0.9975941,    // Lane4  Working       
		   0.25,        0.25,        0.25,        0.25);        // Lane4  Not Working   ;
	};

node RI {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Working, Not_Working);
	parents = (sensorStateT1);
	probs = 
		// Working      Not Working   // sensorStateT1 
		  (0.8,         0.2,          // Working       
		   0.2,         0.8);         // Not Working   ;
	};

node laneT2 {
	kind = NATURE;
	discrete = TRUE;
	chance = CHANCE;
	states = (Lane1, Lane2, Lane3, Lane4);
	parents = (laneT1);
	probs = 
		// Lane1        Lane2        Lane3        Lane4         // laneT1 
		  (0.3216594,   0.2959386,   0.2304717,   0.1519303,    // Lane1  
		   0.2586857,   0.2811688,   0.2586857,   0.2014598,    // Lane2  
		   0.2014598,   0.2586857,   0.2811688,   0.2586857,    // Lane3  
		   0.1519303,   0.2304717,   0.2959386,   0.3216594);   // Lane4  ;
	};
};
